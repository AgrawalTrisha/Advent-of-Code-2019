import java.util.Scanner;

public class Runner {
    public static void main(String[] args) {
        // d1p1
        Scanner scan = new Scanner("141923 145715 63157 142712 147191 96667 117032 98123 135120 90609 132022 61962 110315 78993 130183 102188 128800 140640 144402 133746 66157 136169 88585 82083 78884 66913 142607 62297 116267 92283 108383 142698 53334 139604 144184 89522 142032 68327 111034 58033 72836 90483 111008 91385 115528 66856 76318 63000 61721 86102 89367 91018 126390 135550 106711 118434 117698 108304 98998 82998 147998 83344 149309 53964 111042 112244 114337 134419 76114 147869 107076 78626 66552 133785 112234 52693 73606 116199 72505 137500 64873 147893 56938 87481 146006 82226 133657 84149 123742 137593 55372 64696 54386 83466 135058 133268 84234 119067 143566 134224");
        int sum = 0;
        while (scan.hasNextInt()) {
            sum += AdventOfCode.d1p1(scan.nextInt());
        }
        System.out.println("Day 1, Problem 1: " + sum);

        // d1p2
        scan = new Scanner("141923 145715 63157 142712 147191 96667 117032 98123 135120 90609 132022 61962 110315 78993 130183 102188 128800 140640 144402 133746 66157 136169 88585 82083 78884 66913 142607 62297 116267 92283 108383 142698 53334 139604 144184 89522 142032 68327 111034 58033 72836 90483 111008 91385 115528 66856 76318 63000 61721 86102 89367 91018 126390 135550 106711 118434 117698 108304 98998 82998 147998 83344 149309 53964 111042 112244 114337 134419 76114 147869 107076 78626 66552 133785 112234 52693 73606 116199 72505 137500 64873 147893 56938 87481 146006 82226 133657 84149 123742 137593 55372 64696 54386 83466 135058 133268 84234 119067 143566 134224");
        sum = 0;
        while (scan.hasNextInt()) {
            sum += AdventOfCode.d1p2(scan.nextInt());
        }
        System.out.println("Day 1, Problem 2: " + sum);

        // d2p1
        int[] nums = {1,0,0,3,1,1,2,3,1,3,4,3,1,5,0,3,2,13,1,19,1,6,19,23,2,6,23,27,1,5,27,31,2,31,9,35,1,35,5,39,1,39,5,43,1,43,10,47,2,6,47,51,1,51,5,55,2,55,6,59,1,5,59,63,2,63,6,67,1,5,67,71,1,71,6,75,2,75,10,79,1,79,5,83,2,83,6,87,1,87,5,91,2,9,91,95,1,95,6,99,2,9,99,103,2,9,103,107,1,5,107,111,1,111,5,115,1,115,13,119,1,13,119,123,2,6,123,127,1,5,127,131,1,9,131,135,1,135,9,139,2,139,6,143,1,143,5,147,2,147,6,151,1,5,151,155,2,6,155,159,1,159,2,163,1,9,163,0,99,2,0,14,0};
        nums[1] = 12;
        nums[2] = 2;
        nums = AdventOfCode.d2p1(nums);
        System.out.println("Day 2, Problem 1: " + nums[0]);

        // d2p2
        nums = new int[]{1, 0, 0, 3, 1, 1, 2, 3, 1, 3, 4, 3, 1, 5, 0, 3, 2, 13, 1, 19, 1, 6, 19, 23, 2, 6, 23, 27, 1, 5, 27, 31, 2, 31, 9, 35, 1, 35, 5, 39, 1, 39, 5, 43, 1, 43, 10, 47, 2, 6, 47, 51, 1, 51, 5, 55, 2, 55, 6, 59, 1, 5, 59, 63, 2, 63, 6, 67, 1, 5, 67, 71, 1, 71, 6, 75, 2, 75, 10, 79, 1, 79, 5, 83, 2, 83, 6, 87, 1, 87, 5, 91, 2, 9, 91, 95, 1, 95, 6, 99, 2, 9, 99, 103, 2, 9, 103, 107, 1, 5, 107, 111, 1, 111, 5, 115, 1, 115, 13, 119, 1, 13, 119, 123, 2, 6, 123, 127, 1, 5, 127, 131, 1, 9, 131, 135, 1, 135, 9, 139, 2, 139, 6, 143, 1, 143, 5, 147, 2, 147, 6, 151, 1, 5, 151, 155, 2, 6, 155, 159, 1, 159, 2, 163, 1, 9, 163, 0, 99, 2, 0, 14, 0};
        System.out.println("Day 2, Problem 2: " + AdventOfCode.d2p2(nums));
    }
}